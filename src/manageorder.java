
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import services.openpdf;
import dao.connectionprovider;
import dao.inventoryutils;
import java.io.FileOutputStream;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Junaid Mansuri
 */
public class manageorder extends javax.swing.JFrame {

    private int customerpk = 0;
    private int productpk = 0;
    private int finaltotalprice = 0;
    private String orderid = "";

    /**
     * Creates new form manageorder
     */
    public manageorder() {
        initComponents();
        setLocationRelativeTo(null);

    }

    private void clearallproductfields() {
        productpk = 0;
        txtproductname.setText("");
        txtproductprice.setText("");
        txtdescription.setText("");
        txtquantity.setText("");

    }

    public String getuniqueId(String prefix) {

        return prefix + System.nanoTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblcustomer = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblproduct = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblcart = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtmobile = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtproductname = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtproductprice = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtdescription = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtquantity = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        totalprice = new javax.swing.JLabel();
        btnsaveorder = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Manage Order");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, -1, -1));

        tblcustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Mobile Number", "Email"
            }
        ));
        tblcustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblcustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblcustomer);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 184, 411, 284));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Customer List");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 102, -1, -1));

        tblproduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Price", "Quantity", "Description", "Category ID", "Category Name"
            }
        ));
        tblproduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblproductMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblproduct);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 184, -1, 284));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Product List");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(633, 102, -1, -1));

        tblcart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Quantity", "Price", "Description", "Sub Total"
            }
        ));
        tblcart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblcartMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblcart);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(955, 184, 398, 284));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Cart");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1123, 96, -1, -1));

        jLabel5.setText("Selected customer");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, -1, -1));

        jLabel6.setText("Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, -1, -1));
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 550, 281, -1));

        jLabel7.setText("Mobile Number");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 600, -1, -1));
        getContentPane().add(txtmobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 630, 281, -1));

        jLabel8.setText("Email");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 670, -1, -1));

        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });
        getContentPane().add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 710, 281, -1));

        jLabel9.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 13)); // NOI18N
        jLabel9.setText("Selected product");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 486, -1, -1));

        txtproductname.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 13)); // NOI18N
        getContentPane().add(txtproductname, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 553, 364, -1));

        jLabel10.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 13)); // NOI18N
        jLabel10.setText("Product Name");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 522, -1, -1));

        jLabel11.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 13)); // NOI18N
        jLabel11.setText("Product Price");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 597, -1, -1));

        txtproductprice.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 13)); // NOI18N
        getContentPane().add(txtproductprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 623, 364, 22));

        jLabel12.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 13)); // NOI18N
        jLabel12.setText("Product description");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 665, -1, -1));

        txtdescription.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 13)); // NOI18N
        getContentPane().add(txtdescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 690, 364, 33));

        jLabel13.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 13)); // NOI18N
        jLabel13.setText("Oder Quantity");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 730, -1, -1));

        txtquantity.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 13)); // NOI18N
        getContentPane().add(txtquantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 766, 364, -1));

        jButton1.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 13)); // NOI18N
        jButton1.setText("Add To Cart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(457, 808, 364, -1));

        jLabel14.setText("Total Amount RS.");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(1066, 499, -1, -1));

        totalprice.setText("00000");
        getContentPane().add(totalprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1174, 499, -1, -1));

        btnsaveorder.setText("Save Order Details");
        btnsaveorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveorderActionPerformed(evt);
            }
        });
        getContentPane().add(btnsaveorder, new org.netbeans.lib.awtextra.AbsoluteConstraints(955, 565, 398, -1));

        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(955, 622, 398, -1));

        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(955, 682, 398, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Orders_background.png"))); // NOI18N
        jLabel16.setMaximumSize(new java.awt.Dimension(1365, 927));
        jLabel16.setMinimumSize(new java.awt.Dimension(1365, 927));
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 1370, 1050));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:

        txtname.setEditable(false);
        txtmobile.setEditable(false);
        txtemail.setEditable(false);

        txtproductname.setEditable(false);
        txtproductprice.setEditable(false);
        txtdescription.setEditable(false);
        DefaultTableModel model = (DefaultTableModel) tblcustomer.getModel();
        DefaultTableModel pmodel = (DefaultTableModel) tblproduct.getModel();

        try {
            Connection con = connectionprovider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from customer");
            while (rs.next()) {

                model.addRow(new Object[]{rs.getString("customer_pk"), rs.getString("name"), rs.getString("mobilenumber"), rs.getString("email")});

            }

            rs = st.executeQuery("select * from product inner join category on product.category_fk = category.category_pk");
            while (rs.next()) {

                pmodel.addRow(new Object[]{rs.getString("product_pk"), rs.getString("name"), rs.getString("price"), rs.getString("quantity"), rs.getString("description"), rs.getString("category_fk"), rs.getString(8)});

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String number_units = txtquantity.getText();
        if (!number_units.equals("")) {
            String productname = txtproductname.getText();
            String pdescription = txtproductname.getText();
            String pprice = txtproductprice.getText();
            int TotalPrice = Integer.parseInt(txtquantity.getText()) + Integer.parseInt(pprice);
            int checkstock = 0;
            int checkproductalreadyexist = 0;

            try {

                Connection con = connectionprovider.getCon();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("select * from product where product_pk=" + productpk + "");
                while (rs.next()) {
                    if (rs.getInt("quantity") >= Integer.parseInt(number_units)) {
                        checkstock = 1;
                    } else {
                        JOptionPane.showMessageDialog(null, "Product is out of Stock Only " + rs.getInt("quantity") + " Left ");
                    }
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);

            }
            if (checkstock == 1) {
                DefaultTableModel model = (DefaultTableModel) tblcart.getModel();
                if (tblcart.getRowCount() != 0) {

                    for (int i = 0; i < tblcart.getRowCount(); i++) {
                        if (Integer.parseInt(model.getValueAt(i, 0).toString()) == productpk) {
                            checkproductalreadyexist = 1;
                            JOptionPane.showMessageDialog(null, "Cannot add product already exist !");

                        }
                    }
                }
                if (checkproductalreadyexist == 0) {
                    model.addRow(new Object[]{productpk, productname, number_units, pprice, pdescription, TotalPrice});
                    finaltotalprice = finaltotalprice + TotalPrice;
                    totalprice.setText(String.valueOf(finaltotalprice));
                    JOptionPane.showMessageDialog(null, "Added Successfully ");

                }
                clearallproductfields();

            }
        } else {
            JOptionPane.showMessageDialog(null, "number of quantity and product field is required !");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setVisible(false);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new manageorder().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tblcustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblcustomerMouseClicked
        // TODO add your handling code here:
        int index = tblcustomer.getSelectedRow();
        TableModel model = tblcustomer.getModel();

        String id = model.getValueAt(index, 0).toString();
        customerpk = Integer.parseInt(id);

        String name = model.getValueAt(index, 1).toString();
        txtname.setText(name);

        String mobile = model.getValueAt(index, 2).toString();
        txtmobile.setText(mobile);

        String email = model.getValueAt(index, 3).toString();
        txtemail.setText(email);


    }//GEN-LAST:event_tblcustomerMouseClicked

    private void tblproductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblproductMouseClicked
        // TODO add your handling code here:
        int index = tblproduct.getSelectedRow();
        TableModel model = tblproduct.getModel();
        String id = model.getValueAt(index, 0).toString();
        productpk = Integer.parseInt(id);

        String name = model.getValueAt(index, 1).toString();
        txtproductname.setText(name);

        String price = model.getValueAt(index, 2).toString();
        txtproductprice.setText(price);

        String description = model.getValueAt(index, 4).toString();
        txtdescription.setText(description);

        String quantity = model.getValueAt(index, 3).toString();
        txtquantity.setText(quantity);


    }//GEN-LAST:event_tblproductMouseClicked

    private void tblcartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblcartMouseClicked
        // TODO add your handling code here:
        int index = tblcart.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "Do you want to remove this product", "select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            TableModel model = tblcart.getModel();
            String subtotal = model.getValueAt(index, 5).toString();
            finaltotalprice = finaltotalprice - Integer.parseInt(subtotal);
            totalprice.setText(String.valueOf(finaltotalprice));
            ((DefaultTableModel) tblcart.getModel()).removeRow(index);
        }
    }//GEN-LAST:event_tblcartMouseClicked

    private void btnsaveorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveorderActionPerformed
        // TODO add your handling code here:
        if (finaltotalprice != 0 && !txtname.getText().equals("")) {
            orderid = getuniqueId("Bill");
            DefaultTableModel dtm = (DefaultTableModel) tblcart.getModel();
            if (tblcart.getRowCount() != 0) {
                for (int i = 0; i < tblcart.getRowCount(); i++) {

                    try {
                        Connection con = connectionprovider.getCon();
                        Statement st = con.createStatement();
                        st.executeUpdate("update product set quantity=quantity-" + Integer.parseInt(dtm.getValueAt(i, 2).toString()) + " where product_pk=" + Integer.parseInt(dtm.getValueAt(i, 0).toString()));

                    } catch (NumberFormatException np) {
                        JOptionPane.showMessageDialog(null, "Please Fill Required Fields Correctly !");

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);

                    }
                }
                for (int i = 0; i < tblcart.getRowCount(); i++) {

                    try {

                        Connection con = connectionprovider.getCon();
                        SimpleDateFormat myformat = new SimpleDateFormat("dd-MM-YYYY");
                        Calendar cal = Calendar.getInstance();
                        PreparedStatement pst = con.prepareStatement("insert into orderDetails(orderid,customer_fk,orderdate,totalpaid) values(?,?,?,?)");
                        pst.setString(1, orderid);
                        pst.setInt(2, customerpk);
                        pst.setString(3, myformat.format(cal.getTime()));
                        pst.setInt(4, finaltotalprice);
                        pst.executeUpdate();

                    } catch (NumberFormatException np) {
                        JOptionPane.showMessageDialog(null, "Please Fill Required Fields Correctly !");

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);

                    }

                }

            }
//creating document 

            com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
            try {
                SimpleDateFormat myformat = new SimpleDateFormat("dd-MM-YYYY");
                Calendar cal = Calendar.getInstance();
                PdfWriter.getInstance(doc, new FileOutputStream(inventoryutils.billpath + "" + orderid + ".pdf "));
                doc.open();
                Paragraph projectname = new Paragraph("                                   Inventory Management System");
                doc.add(projectname);
                Paragraph startLine = new Paragraph("********************************************************************************************");
                Paragraph details = new Paragraph("\tOrder ID" + orderid + "\nDate:" + myformat.format(cal.getTime()) + "\nTotal paid:" + finaltotalprice);
                doc.add(details);
                doc.add(startLine);
                PdfPTable tb1 = new PdfPTable(5);
                PdfPCell nameCell = new PdfPCell(new Phrase("Name"));
                PdfPCell descriptionCell = new PdfPCell(new Phrase("Description"));
                PdfPCell perunitCell = new PdfPCell(new Phrase("Price per Unit"));
                PdfPCell quantityCell = new PdfPCell(new Phrase("Quantity"));
                PdfPCell subtotalCell = new PdfPCell(new Phrase("Sub Total Price "));

                BaseColor backgroundColor = new BaseColor(250, 204, 51);
                nameCell.setBackgroundColor(backgroundColor);
                descriptionCell.setBackgroundColor(backgroundColor);
                perunitCell.setBackgroundColor(backgroundColor);
                quantityCell.setBackgroundColor(backgroundColor);
                subtotalCell.setBackgroundColor(backgroundColor);

                tb1.addCell(nameCell);
                tb1.addCell(descriptionCell);
                tb1.addCell(perunitCell);
                tb1.addCell(quantityCell);
                tb1.addCell(subtotalCell);

                for (int i = 0; i < tblcart.getRowCount(); i++) {
                    tb1.addCell(tblcart.getValueAt(i, 1).toString());
                    tb1.addCell(tblcart.getValueAt(i, 4).toString());
                    tb1.addCell(tblcart.getValueAt(i, 3).toString());
                    tb1.addCell(tblcart.getValueAt(i, 2).toString());
                    tb1.addCell(tblcart.getValueAt(i, 5).toString());
                    doc.add(tb1);
                    doc.add(startLine);
                    Paragraph greetmsg = new Paragraph("Thank you for purchase,Please visit again ");
                    doc.add(greetmsg);
                    openpdf.openbtid(orderid);
                }
            } catch (NumberFormatException np) {
                JOptionPane.showMessageDialog(null, "Please Fill Required Fields Correctly !");

            } catch (Exception e) {

                JOptionPane.showMessageDialog(null, e);

            }
            doc.close();
            setVisible(false);
            new manageorder().setVisible(true);

        } else {

            JOptionPane.showMessageDialog(null, "Please add a product to cart or select a product !");
        }
    }//GEN-LAST:event_btnsaveorderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manageorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manageorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manageorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manageorder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manageorder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsaveorder;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblcart;
    private javax.swing.JTable tblcustomer;
    private javax.swing.JTable tblproduct;
    private javax.swing.JLabel totalprice;
    private javax.swing.JTextField txtdescription;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtmobile;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtproductname;
    private javax.swing.JTextField txtproductprice;
    private javax.swing.JTextField txtquantity;
    // End of variables declaration//GEN-END:variables
}
