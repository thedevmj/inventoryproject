
import dao.connectionprovider;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Junaid Mansuri
 */
public class manageproduct extends javax.swing.JFrame {

    private int productpk = 0;
    private int totalQuantity = 0;

    /**
     * Creates new form manageproduct
     */
    public manageproduct() {
        initComponents();
        setLocationRelativeTo(null);
    }

    private void getAllCategory() {
        try {
            Connection con = connectionprovider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from category");
            combocategory.removeAllItems();
            while (rs.next()) {
                combocategory.addItem(rs.getString("category_pk") + "-" + rs.getString("name"));

            }
        } catch (NumberFormatException np) {
            JOptionPane.showMessageDialog(null, "Error loading category !");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "An Error Occurred");
        }
    }

    private boolean validateform(String formtype) {

        if (formtype.equals("edit") && !txtname.getText().equals("") && !txtprice.getText().equals("") && !txtdescription.getText().equals("")) {
            return true;
        } else if (formtype.equals("new") && !txtname.getText().equals("") && !txtprice.getText().equals("") && !txtdescription.getText().equals("") && !txtquantity.getText().equals("")) {
            return true;
        } else {

            return false;
        }
    }

    private void loadProductTable() {

        try {

            DefaultTableModel model = (DefaultTableModel) tableproduct.getModel();

            Connection con = connectionprovider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from product inner join category on product.category_fk = category.category_pk");

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("product_pk"),
                    rs.getString("name"),
                    rs.getString("quantity"),
                    rs.getString("price"),
                    rs.getString("description"),
                    rs.getString("category_fk"),
                    rs.getString(8)

                });

            }

        } catch (NumberFormatException np) {
            JOptionPane.showMessageDialog(null, "Error loading Table !");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "An Error Occurred");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        lblquantity = new javax.swing.JLabel();
        txtquantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtprice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtdescription = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        combocategory = new javax.swing.JComboBox<>();
        btnsave = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnreset = new javax.swing.JButton();
        btnclose = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableproduct = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Manage Product");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(279, 13, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, -1, -1));

        txtname.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 360, -1));

        lblquantity.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblquantity.setText("Quantity");
        getContentPane().add(lblquantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 150, -1, -1));

        txtquantity.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        getContentPane().add(txtquantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, 360, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("Price");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, -1, -1));

        txtprice.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        getContentPane().add(txtprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, 360, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Description");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 290, -1, -1));

        txtdescription.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        getContentPane().add(txtdescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 320, 360, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Category");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, -1, -1));

        combocategory.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        combocategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        getContentPane().add(combocategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 380, 360, -1));

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 430, -1, -1));

        btnupdate.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 430, -1, -1));

        btnreset.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnreset.setText("Reset");
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });
        getContentPane().add(btnreset, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 430, -1, -1));

        btnclose.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnclose.setText("Close");
        btnclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnclose, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 430, -1, -1));

        tableproduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Quantity", "Price", "Description", "Category ID", "CategoryName"
            }
        ));
        tableproduct.setName(""); // NOI18N
        tableproduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableproductMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableproduct);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 390, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/All_page_Background.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:

        getAllCategory();
        loadProductTable();


    }//GEN-LAST:event_formComponentShown

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        String name = txtname.getText();
        String quantity = txtquantity.getText();
        String price = txtprice.getText();
        String description = txtdescription.getText();
        String category = (String) combocategory.getSelectedItem();
        String categoryId[] = category.split("-", 0);

        if (!validateform("new")) {

            JOptionPane.showMessageDialog(null, "All fields are required !");

        } else {
            try {

                Connection con = connectionprovider.getCon();
                PreparedStatement pst = con.prepareStatement("insert into product (name,quantity,price,description,category_fk)values(?,?,?,?,?)");
                pst.setString(1, name);
                pst.setString(2, quantity);
                pst.setString(3, price);
                pst.setString(4, description);
                pst.setString(5, categoryId[0]);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Product Added successfully !");

            } catch (NumberFormatException np) {
                JOptionPane.showMessageDialog(null, "Please Fill Required Fields Correctly !");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "An Error Occurred");
            }
            DefaultTableModel model = (DefaultTableModel) tableproduct.getModel();
            model.setRowCount(0); // clear old rows
            loadProductTable(); // reload fresh data
            txtname.setText("");
            txtquantity.setText("");
            txtprice.setText("");
            txtdescription.setText("");
            getAllCategory();
            productpk = 0;
            totalQuantity = 0;
            btnupdate.setEnabled(false);

        }


    }//GEN-LAST:event_btnsaveActionPerformed

    private void btncloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncloseActionPerformed
        // TODO add your handling code here:
        setVisible(false);

    }//GEN-LAST:event_btncloseActionPerformed

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        // TODO add your handling code here:

        setVisible(false);
        new manageproduct().setVisible(true);

    }//GEN-LAST:event_btnresetActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed

        String name = txtname.getText().trim();
        String quantity = txtquantity.getText().trim();
        String price = txtprice.getText().trim();
        String description = txtdescription.getText().trim();
        String category = (String) combocategory.getSelectedItem();

        if (!validateform("edit")) {

            JOptionPane.showMessageDialog(null, "All fields are required !");

        } else {
            try {

                Connection con = connectionprovider.getCon();
                PreparedStatement pst = con.prepareStatement("update product set name=?,quantity=?,price=?,description=?,category_fk=? where product_pk=?");
                pst.setString(1, name);
                pst.setString(2, quantity);
                pst.setString(3, price);
                pst.setString(4, description);
                pst.setString(5, category);
                pst.setInt(6, productpk);

                pst.executeUpdate();

                JOptionPane.showMessageDialog(null, "Product is Updated successfully !");
                DefaultTableModel model = (DefaultTableModel) tableproduct.getModel();
                model.setRowCount(0); // This clears all existing rows

            } catch (NumberFormatException np) {
                JOptionPane.showMessageDialog(null, "Please Fill Required Fields Correctly !");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "An Error Occurred");
            }

            loadProductTable();
            btnupdate.setEnabled(false);
            btnsave.setEnabled(true);
            txtname.setText("");
            txtquantity.setText("");
            txtprice.setText("");
            txtdescription.setText("");
            getAllCategory();
            productpk = 0;
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void tableproductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableproductMouseClicked
        // TODO add your handling code here:

        int index = tableproduct.getSelectedRow();
        TableModel model = tableproduct.getModel();
        String id = (String) model.getValueAt(index, 0);
        productpk = Integer.parseInt(id);
        String name = (String) model.getValueAt(index, 1);
        txtname.setText(name);
        String quantity = (String) model.getValueAt(index, 2);

        totalQuantity = 0;
        lblquantity.setText("Add quantity");
        totalQuantity = Integer.parseInt(quantity);

        String price = (String) model.getValueAt(index, 3);
        txtprice.setText(price);

        String description = (String) model.getValueAt(index, 4);
        txtdescription.setText(description);

        combocategory.removeAllItems();
        String categoryId = (String) model.getValueAt(index, 5);
        String categoryname = (String) model.getValueAt(index, 6);
        combocategory.addItem(categoryId + "-" + categoryname);

        btnupdate.setEnabled(true);
        btnsave.setEnabled(false);

    }//GEN-LAST:event_tableproductMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manageproduct.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manageproduct.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manageproduct.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manageproduct.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manageproduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclose;
    private javax.swing.JButton btnreset;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> combocategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblquantity;
    private javax.swing.JTable tableproduct;
    private javax.swing.JTextField txtdescription;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtquantity;
    // End of variables declaration//GEN-END:variables
}
